@using Microsoft.Extensions.Configuration
@inject IConfiguration configuration
@model FishMap.Web.ViewModels.GroupTrips.GroupTripCreateInputModel
@{
    this.ViewData["Title"] = "Добавяне на групов излет";
    var fishSpeciesItems = this.Model.FishSpeciesItems.Select(x => new SelectListItem(x.Name, x.Id));
}
<div class="pb-4 ">
    <h1 class="text-center pt-3">@this.ViewData["Title"]</h1>
    <hr class="alert-info" />
    <form class="row mb-5 mb-md-0 pb-0 pb-md-5" method="post">
        <div class="col-md-6">
            <div class="form-group">
                <label asp-for="WaterPoolName"></label>
                <input type="text" asp-for="WaterPoolName" class="form-control" />
                <span asp-validation-for="WaterPoolName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description"></label>
                <textarea asp-for="Description" rows="5" class="form-control"></textarea>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="FreeSeats"></label>
                <input type="number" min="1" max="10" asp-for="FreeSeats" class="form-control" />
                <span asp-validation-for="FreeSeats" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="MeetingTime"></label>
                <input type="datetime-local" asp-for="MeetingTime" min="@DateTime.Now" value="" class="form-control" />
                <span asp-validation-for="MeetingTime" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="FishingTime"></label>
                <input type="datetime-local" asp-for="FishingTime" min="@DateTime.Now" value="" class="form-control" />
                <span asp-validation-for="FishingTime" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="TargetFishSpeciesId"></label>
                <select asp-for="TargetFishSpeciesId" name="TargetFishSpeciesId"
                        class="form-control" asp-items="fishSpeciesItems">
                    <option>Изберете вид на рибата</option>
                </select>
                <span asp-validation-for="TargetFishSpeciesId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="FishingMethodId"></label>
                <select asp-for="FishingMethodId" class="form-control"
                        asp-items="Html.GetEnumSelectList<FishMap.Data.Models.FishingMethodEnum>()">
                    <option>Избери метод на риболов...</option>
                </select>
                <span asp-validation-for="FishingMethodId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input id="meetingLatitude" type="hidden" asp-for="MeetingSpotLatitude" class="form-control" />
                <span asp-validation-for="MeetingSpotLatitude" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input id="meetingLongtitude" type="hidden" asp-for="MeetingSpotLongtitude" class="form-control" />
                <span asp-validation-for="MeetingSpotLongtitude" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input id="fishingLatitude" type="hidden" asp-for="FishingSpotLatitude" class="form-control" />
                <span asp-validation-for="FishingSpotLatitude" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input id="fishingLongtitude" type="hidden" asp-for="FishingSpotLongtitude" class="form-control" />
                <span asp-validation-for="FishingSpotLongtitude" class="text-danger"></span>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group mt-md-6">
                <label>Изберете локации</label>
                <div id="meetingSpotMap" class="z-depth-1-half map-responsive" style="height: 79vh"></div>
                <div id="fishingSpotMap" class="z-depth-1-half map-responsive" style="height: 79vh; display: none;"></div>
            </div>
            <div class="btn-group" role="group" aria-label="Basic example">
                <button id="meetingSpotBtn" type="button" class="btn btn-primary active">Изберете място на тръгване</button>
                <button id="fishingSpotBtn" type="button" class="btn btn-primary">Изберете риболовно място</button>
            </div>
        </div>
        <div class="col-12 text-center">
            <hr class="alert-info" />
            <button type="submit" class="btn btn-success">Добавяне груповия излет</button>
        </div>
    </form>
</div>

@section Scripts{
    <script src="https://maps.googleapis.com/maps/api/js?key=@(this.configuration["GoogleMaps:ApiKey"])&callback=initMaps&libraries=&v=weekly"
            defer></script>
    <script>
        let fishingSpotMarkers = [];
        let meetingSpotMarkers = [];
        let fishingSpotMap;
        let meetingSpotMap;

        function initMaps() {
            const vehicleMarcerIcon = 'http://maps.google.com/mapfiles/kml/shapes/cabs.png';
            const fishMarkerIcon = 'http://maps.google.com/mapfiles/kml/shapes/fishing.png';

            const myLatlng = { lat: 42.7249925, lng: 25.4833039 };
            fishingSpotMap = new google.maps.Map(document.getElementById("fishingSpotMap"), {
                zoom: 7.5,
                center: myLatlng,
            });

            fishingSpotMap.addListener("click", (event) => {
                deleteMarkers(fishingSpotMarkers);
                addMarker(event.latLng, fishingSpotMap, fishingSpotMarkers, fishMarkerIcon);

                const fishingCoordinatesJson = event.latLng.toJSON()
                fillFishingCoordinates(fishingCoordinatesJson);
            });

            meetingSpotMap = new google.maps.Map(document.getElementById("meetingSpotMap"), {
                zoom: 7.5,
                center: myLatlng,
            })

            meetingSpotMap.addListener("click", (event) => {
                deleteMarkers(meetingSpotMarkers);
                addMarker(event.latLng, meetingSpotMap, meetingSpotMarkers, vehicleMarcerIcon);

                const meetingCoordinatesJson = event.latLng.toJSON()
                fillMeetingCoordinates(meetingCoordinatesJson);
            });

            const fishingMapDiv = document.getElementById('fishingSpotMap');
            const meetingMapDiv = document.getElementById('meetingSpotMap');
            fishingMapDiv.style.display = 'none';

            let fishBtn = document.getElementById('fishingSpotBtn')
            let meetingBtn = document.getElementById('meetingSpotBtn')

            fishBtn.addEventListener('click', () => {
                fishBtn.classList.add('active');
                meetingBtn.classList.remove('active');
                meetingMapDiv.style.display = 'none';
                fishingMapDiv.style.display = '';
            });

            meetingBtn.addEventListener('click', () => {
                meetingBtn.classList.add('active');
                fishBtn.classList.remove('active');
                meetingMapDiv.style.display = '';
                fishingMapDiv.style.display = 'none';
            });
        }

        function addMarker(location, map, markers, markerIcon) {
            const marker = new google.maps.Marker({
                icon: markerIcon,
                draggable: false,
                animation: google.maps.Animation.DROP,
                map: map,
                position: location,
            });
            markers.push(marker);
        }

        function deleteMarkers(markers) {
            clearMarkers(markers);
            markers = [];
        }

        function clearMarkers(markers) {
            setMapOnAll(null, markers);
        }

        function setMapOnAll(map, markers) {
            for (let i = 0; i < markers.length; i++) {
                markers[i].setMap(map);
            }
        }

        function fillFishingCoordinates(latLng) {
            document.getElementById('fishingLatitude').value = latLng.lat;
            document.getElementById('fishingLongtitude').value = latLng.lng;
        }

        function fillMeetingCoordinates(latLng) {
            document.getElementById('meetingLatitude').value = latLng.lat;
            document.getElementById('meetingLongtitude').value = latLng.lng;
        }
    </script>
}

