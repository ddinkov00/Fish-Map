@using Microsoft.Extensions.Configuration
@inject IConfiguration configuration
@model FishMap.Web.ViewModels.Trips.TripByIdViewModel
@{
    ViewData["Title"] = "ById";
}


<div class="container">
    <div class="row mt-4">
        <div class="col-md-8">
            <div id="map" class="z-depth-1-half map-responsive rounded img-thumbnail" style="height: 45vh"></div>
        </div>
        <div class="col-md-4 align-self-center">
            <ul class="list-group">
                <li class="list-group-item"><strong>Име на воден басейн: </strong>@Model.WaterPoolName</li>
                <li class="list-group-item"><strong>Рибар: </strong>@Model.Username</li>
                <li class="list-group-item"><strong>Дата: </strong>@Model.Date</li>
                <li class="list-group-item"><strong>Метод на риболов: </strong>@Model.FishingMethod</li>
                <li class="list-group-item"><strong>Описание: </strong>@Model.Description</li>
            </ul>
            @if (Model.IsUserCreator || Model.IsUserAdmin)
            {
                <div class="d-flex flex-row-reverse mt-3">
                    <a asp-action="Delete" asp-route-id="@Model.Id" class="btn btn-danger">Изтрий</a>
                </div>
            }
        </div>
    </div>
    <hr class="alert-info" />
    <div class="row mt-3">
        <table class="table table-striped table-dark text-center table-responsive-sm">
            <thead>
                <tr>
                    <th scope="col">Вид</th>
                    <th scope="col">Дължина (см.)</th>
                    <th scope="col">Тегло (кг.)</th>
                    <th scope="col">Снимки</th>
                </tr>
            </thead>
            <tbody>
                @for (int i = 0; i < Model.Fish.Count(); i++)
                {
                    <tr>
                        <td>@Model.Fish.ElementAt(i).FishSpecies</td>
                        <td>@Model.Fish.ElementAt(i).Length</td>
                        <td>@(String.Format("{0:0.000}", Model.Fish.ElementAt(i).Weight))</td>
                        <td>
                            <button type="button" class="btn btn-primary" data-toggle="modal" data-target="@("#exampleModal" + i.ToString())">
                                Виж снимки
                            </button>
                            <div class="modal fade" id="@("exampleModal" + i.ToString())" tabindex="-1" role="dialog" aria-labelledby="@("#exampleModalLabel" + i.ToString())" aria-hidden="true">
                                <div class="modal-dialog" role="document">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <h5 class="modal-title" id="@("exampleModalLabel" + i.ToString())">Снимки</h5>
                                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                                <span aria-hidden="true">&times;</span>
                                            </button>
                                        </div>
                                        <div class="modal-body">
                                            <div id="@("carouselExampleControls" + i.ToString())" class="carousel slide" data-ride="carousel">
                                                <div class="carousel-inner">
                                                    @for (int y = 0; y < Model.Fish.ElementAt(i).ImagesUrls.Count(); y++)
                                                    {
                                                        if (y == 0)
                                                        {
                                                            <div class="carousel-item active">
                                                                <img class="d-block w-100" src="@Model.Fish.ElementAt(i).ImagesUrls.ElementAt(y)" alt="Image">
                                                            </div>
                                                        }
                                                        else
                                                        {
                                                            <div class="carousel-item">
                                                                <img class="d-block w-100" src="@Model.Fish.ElementAt(i).ImagesUrls.ElementAt(y)" alt="Image">
                                                            </div>
                                                        }
                                                    }
                                                </div>
                                                <a class="carousel-control-prev" href="@("#carouselExampleControls" + i.ToString())" role="button" data-slide="prev">
                                                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                                    <span class="sr-only">Previous</span>
                                                </a>
                                                <a class="carousel-control-next" href="@("#carouselExampleControls" + i.ToString())" role="button" data-slide="next">
                                                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                                    <span class="sr-only">Next</span>
                                                </a>
                                            </div>
                                        </div>
                                        <div class="modal-footer">
                                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Затвори</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <hr class="alert-info mt-0 mb-0" />
    <div class="row mt-2">
            <h3>Коментари:</h3>
    </div>
    <div class="row mt-3" id="commentsDiv">
        <table class="table table-dark table-responsive-sm table-striped">
            <thead>
                <tr>
                    <th scope="col">#</th>
                    <th scope="col">Потребител:</th>
                    <th scope="col">Коментар</th>
                    <th scope="col">Дата: </th>
                </tr>
            </thead>
            <tbody>
                @for (int i = 0; i < Model.Comments.Count(); i++)
                {
                    <tr>
                        <th scope="row">@(i + 1)</th>
                        <td>@Model.Comments.ElementAt(i).AddedByUsername</td>
                        <td>@Model.Comments.ElementAt(i).Content</td>
                        <td>@Model.Comments.ElementAt(i).CreatedOnString</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <div id="makeCommentDiv">
        <form asp-controller="Comments" asp-action="Make" method="post" class="row mb-5">
            <input type="hidden" id="TripId" name="TripId" value="@Model.Id" />
            <div class="form-group col-md-10">
                <label for="Content"></label>
                <textarea name="Content" id="Content" class="w-100 form-control"></textarea>
            </div>
            <div class="col-md-2 align-self-center">
                <input type="submit" class="btn btn-lg btn-success" value="+ Kоментар"/>
            </div>
        </form>
    </div>
</div>

@section Scripts{
    <script src="https://maps.googleapis.com/maps/api/js?key=@(this.configuration["GoogleMaps:ApiKey"])&callback=initMap&libraries=&v=weekly"
            defer></script>
    <script>
        let markers = [];
        let map;

        function initMap() {
            const location = { lat: @Model.LocationLatitude, lng: @Model.LoacationLongtitude };

            map = new google.maps.Map(document.getElementById("map"), {
                zoom: 12,
                center: location,
            });

            const marker = new google.maps.Marker({
                icon: "http://maps.google.com/mapfiles/kml/shapes/fishing.png",
                draggable: false,
                optimized: true,
                animation: google.maps.Animation.DROP,
                map: map,
                position: location,
            });

            markers.push(marker);
        }
    </script>
}

